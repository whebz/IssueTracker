
@{
    ViewBag.Title = "List";
}
@model IEnumerable<IssueTracker.Model.ViewModel.AccountByType>
<div class="sidebar">
    <nav class="sidebar-nav">
        @Html.Partial("_ListSummary", Model)
    </nav>
</div>

<!-- Main content -->
<main class="main">

    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Account list</a></li>
        <!-- add button -->
        <li class="breadcrumb-menu hidden">
            <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                <a class="btn btn-secondary" href="./"><i class="icon-plus"></i> &nbsp;Add new account</a>
            </div>
        </li>
    </ol>

    <div class="container-fluid">

        <div class="card">
            <div class="card-header">
                Accounts
            </div>
            <div class="card-block">



                @(Html.Kendo().Grid<IssueTracker.Model.ViewModel.AccountViewModel>()
                .Name("grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.AccountId)
                           .ClientTemplate("<a class='btn btn-secondary' onclick='edit(\"#= AccountId #\");'><span class='fa fa-edit' /></a><a class='btn btn-danger' onclick='destroyAccount(\"#= AccountId #\");'><span class='fa fa-remove' /></a>")
                           .Title("").Width(100);
                    columns.Bound(p => p.AccountId).Width(150);
                    columns.Bound(p => p.Name).Width(180);
                    columns.Bound(p => p.AccountType).Width(180);
                    columns.Bound(p => p.ClientName).Width(180);
                    
                })
                .Scrollable()
                .Sortable()
                .Pageable(pageable => pageable
                    .PageSizes(true)
                    .ButtonCount(5)
                )
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model =>
                    {
                        model.Id(p => p.AccountId);
                        model.Field(p => p.ClientId).DefaultValue(ViewData["defaultClient"] as IssueTracker.Model.Client);
                    })
                    .PageSize(20)
                    .Read(read => read.Action("Accounts_Read", "Account"))
                )
                )
            </div>
        </div>
    </div>
    <!-- /.conainer-fluid -->
</main>
<script>
    var grid;
    $(document).ready(function () {
        grid = $("#grid").data("kendoGrid");
    });
    function destroyAccount(id) {
        var r = confirm("Sei sicuro di voler cancellare l'account?");
        if (r) {
            $.ajax({
                url: '@Url.Action("Account_Destroy", "Account")',
                data: {id: id},
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    alert(data)
                },
                complete: function () {
                    grid.dataSource.read();
                    grid.refresh();
                }
            });

        }
    }
    function edit(id) {
        document.location.href = '@Url.Action("Edit", "Account")' + '?k=' + id;
    }
</script>