
@{
    ViewBag.Title = "List";
}
@model IEnumerable<IssueTracker.Model.ViewModel.AccountByType>

<div class="content-header clearfix">
    <h1 class="pull-left">
        Accounts
    </h1>
    <div class="pull-right">
        <a href="@Url.Action("Edit", "Account")" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            Add new
        </a>
        <div class="btn-group">
            <button type="button" class="btn btn-success">
                <i class="fa fa-download"></i>
                Export
            </button>
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">&nbsp;</span>
            </button>
        </div>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group" style="margin-bottom: 0px;">
            @*<div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="AccountName">Name</label>
                                </div>
                                <div class="col-md-8">
                                    <input type="text" id="AccountName" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button type="button" id="search-orders" class="btn btn-primary btn-search">
                                <i class="fa fa-search"></i>
                                Search
                            </button>
                        </div>
                    </div>
                </div>
            </div>*@
            <div class="panel panel-default" id="grid-panel" style="margin-bottom:5px">
                <div class="panel-body">
                    @(Html.Kendo().Grid<IssueTracker.Model.ViewModel.AccountViewModel>()
                            .Name("grid")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.AccountId)
                                       .ClientTemplate("<a class='btn btn-default' onclick='edit(\"#= AccountId #\");'><span class='fa fa-edit' /></a>")
                                       .Title("edit").Width(40);
                                columns.Bound(p => p.AccountId)
                                       .ClientTemplate("<a class='btn btn-danger' onclick='destroyAccount(\"#= AccountId #\");'><span class='fa fa-remove' /></a>")
                                       .Title("delete").Width(40);
                                columns.Bound(p => p.AccountId).Width(150);
                                columns.Bound(p => p.Name).Width(180);
                                columns.Bound(p => p.AccountType).Width(180);
                                columns.Bound(p => p.ClientName).Width(180);

                            })
                            .Scrollable()
                            .Sortable()
                            .Pageable(pageable => pageable
                                .PageSizes(true)
                                .ButtonCount(5)
                            )
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Model(model =>
                                {
                                    model.Id(p => p.AccountId);
                                    model.Field(p => p.ClientId).DefaultValue(ViewData["defaultClient"] as IssueTracker.Model.Client);
                                })
                                .PageSize(20)
                                .Read(read => read.Action("Accounts_Read", "Account"))
                            )
                            .HtmlAttributes(new { style = "height: 100%" })
                    )
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var grid;
    $(document).ready(function () {
        grid = $("#grid").data("kendoGrid");
        setGridBlockSize();
    });
    function setGridBlockSize() {
        var h = ($(window).height() - $(".panel-search").outerHeight() - $(".content-header").outerHeight() -
            $(".main-header").outerHeight() - $(".main-footer").outerHeight() - 40);
        $("#grid-panel").height(h);
        $("#grid").height(h - 25);
        $("#main-nav #accounts").addClass("active");
    }
    function destroyAccount(id) {
        var r = confirm("Sei sicuro di voler cancellare l'account?");
        if (r) {
            $.ajax({
                url: '@Url.Action("Account_Destroy", "Account")',
                data: {id: id},
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    alert(data)
                },
                complete: function () {
                    grid.dataSource.read();
                    grid.refresh();
                }
            });

        }
    }
    function edit(id) {
        document.location.href = '@Url.Action("Edit", "Account")' + '?k=' + id;
    }
</script>