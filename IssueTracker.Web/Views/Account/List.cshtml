
@{
    ViewBag.Title = "List";
}
@section PageStyles {
    <link href="~/Static/css/account.css" rel="stylesheet" />
}
<script type="text/x-kendo-tmpl" id="account-template">
    <div class="contact-view k-widget" uid="#: uid #">
        <div class="header">
            <span class="image-wrapper">
                <img src="#if (Photo) {# @Url.Content("~/files/profile/") #:Photo # #} else {# @Url.Content("~/files/profile/default-contact.png") #} #" alt="#: Name #"/>
                <img src="" alt="default" />
            </span>
            <span class="name">#: Name #</span>
            <div class="edit-buttons">
                <span class="k-button k-single-edit-button"><span class="icon i-edit"></span></span>
                <span class="k-button k-single-delete-button"><span class="icon i-delete"></span></span>
            </div>
        </div>
        <div class="details">
            <div class="column">
                <p><span class="label">Country</span>#if (Country) {# #: Country # #}# &nbsp;</p>
                <p><span class="label">City</span>#if (City) {# #: City # #}# &nbsp;</p>
            </div>
            <div class="column">
                <p>
                    <span class="label">Company</span>
                    <span>#if (ClientName) {# #: ClientName # #}# &nbsp;</span>
                </p>
                <p>
                    <span class="label">Phone</span>
                    <span>#if (Phone) {# #: Phone # #}# &nbsp;</span>
                </p>
                <p>
                    <span class="label">Email</span>
                    <span>#if (Email) {# #: Email # #}# &nbsp;</span>
                </p>
            </div>
        </div>
    </div>
</script>
@Html.Partial("Sidebar")
<section class="main-section">
    <div class="toolbar">
        <div class="left">
            <span class="btn btn-export-pdf" onclick="exportPeople()">Export to PDF</span>
        </div>
        <div class="right" style="display:none">
            <span class="btn btn-vertical-pane iconOnly" onclick="changeToListDetails(this)" title="Display vertical panes"></span>
            <span class="btn btn-cards iconOnly selected" onclick="changeToContactsCards(this)" title="Display cards"></span>
        </div>
    </div>
    <div class="inner-section card-view">
        <div class="list-view-inner">
            <span class="searchbox">
                <input type="text" class="k-input search-textbox" placeholder="Search people ...">
            </span>
            @*
            @(Html.Kendo().ListView<IssueTracker.Model.Account>()
                .Name("mainWidget")
                .TagName("div")
                .ClientTemplateId("account-template")
                .DataSource(dataSource => dataSource
                    .Model(model => model.Id("AccountId"))
                    .Read(read => read.Action("Accounts_Read", "Account"))
                    .Create(create => create.Action("Account_Create", "Account"))
                    .Update(update => update.Action("Account_Update", "Account"))
                    .Destroy(destroy => destroy.Action("Account_Destroy", "Account"))
                )
                .Editable()
                .Selectable()
                .Events(e => e
                    .DataBound("onListViewDataBound")
                    .Edit("onListViewEdit")
                    .Cancel("onListViewChangeCancel")
                    .Save("onListViewChangeSave")
                )
                .HtmlAttributes(new { @class = "contacts-list" })
            )*@

            @(Html.Kendo().Grid<IssueTracker.Model.ViewModel.AccountViewModel>()
                .Name("grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.AccountId);
                    columns.Bound(p => p.Name).Width(180);
                    columns.Bound(p => p.AccountTypeId).ClientTemplate("#=AccountType#").Width(180);
                    columns.Bound(p => p.ClientId).ClientTemplate("#=ClientName#").Width(180);
                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
                })
                .ToolBar(toolBar =>
                {
                    toolBar.Create();
                })
                .Editable(editable => editable.Mode(GridEditMode.PopUp))
                .Pageable()
                .Sortable()
                .Scrollable()
                .HtmlAttributes(new { style = "height:550px;" })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model =>
                    {
                        model.Id(p => p.AccountId);
                        model.Field(p => p.ClientId).DefaultValue(ViewData["defaultClient"] as IssueTracker.Model.Client);
                    })
                    .PageSize(20)
                    .Read(read => read.Action("Accounts_Read", "Account"))
                    .Create(create => create.Action("Account_Create", "Account"))
                    .Update(update => update.Action("Account_Update", "Account"))
                    .Destroy(destroy => destroy.Action("Account_Destroy", "Account"))
                )
            )

        </div>
    </div>
</section>

<script src="~/Static/js/account.js"></script>