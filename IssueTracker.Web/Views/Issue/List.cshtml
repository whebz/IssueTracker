@{
    ViewBag.Title = "List";
}

<!-- Content Header (Page header) -->
<div class="content-header clearfix">
    <h1 class="pull-left">
        Issues
    </h1>
    <div class="pull-right">
        <a href="@Url.Action("IssueForm", "Issue")" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            Add new
        </a>
    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group" style="margin-bottom: 0px;">
            @* remove to use grid built in filter *@
            @*<div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="IssueStatus">Priority</label>
                                </div>
                                <div class="col-md-8">
                                    @(Html.Kendo().MultiSelect()
                                              .Name("IssueStatus")
                                              .DataTextField("Description")
                                              .DataValueField("Id")
                                              .DataSource(source =>
                                              {
                                                  source.Read(read =>
                                                  {
                                                      read.Action("GetIssueStatusList", "Common");
                                                  });
                                              })
                                              .Height(400)
                                              .HtmlAttributes(new { id = "IssueStatus" })
                                    )
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="IssueClient">Client</label>
                                </div>
                                <div class="col-md-8">
                                    @(Html.Kendo().MultiSelect()
                                              .Name("IssueClient")
                                              .DataTextField("Name")
                                              .DataValueField("Id")
                                              .DataSource(source =>
                                              {
                                                  source.Read(read =>
                                                  {
                                                      read.Action("GetClient", "Account");
                                                  });
                                              })
                                              .Height(400)
                                              .HtmlAttributes(new { id = "IssueClient" })
                                    )
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="IssueProject">Project</label>
                                </div>
                                <div class="col-md-8">
                                    @(Html.Kendo().MultiSelect()
                                              .Name("IssueProject")
                                              .DataTextField("Name")
                                              .DataValueField("Id")
                                              .DataSource(source =>
                                              {
                                                  source.Read(read =>
                                                  {
                                                      read.Action("GetProjectListNoNA", "Project");
                                                  });
                                              })
                                              .Height(400)
                                              .HtmlAttributes(new { id = "IssueProject" })
                                    )
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="IssueStatus">Assigned Status</label>
                                </div>
                                <div class="col-md-8">
                                    <select id="IssueAssigned" name="IssueAssigned" class="form-control input-sm" style="width:120px!important" size="1">
                                        <option value="0">All</option>
                                        <option value="1">Not Assigned</option>
                                        <option value="2">Assigned</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="IssuePriority">Priority</label>
                                </div>
                                <div class="col-md-8">
                                    @(Html.Kendo().MultiSelect()
                                              .Name("IssuePriority")
                                              .DataTextField("Name")
                                              .DataValueField("Id")
                                              .DataSource(source =>
                                              {
                                                  source.Read(read =>
                                                  {
                                                      read.Action("GetPriorityList", "Common");
                                                  });
                                              })
                                              .Height(400)
                                              .HtmlAttributes(new { id = "IssuePriority" })
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-7 col-md-offset-5">
                            <button type="button" id="search-issues" class="btn btn-primary btn-search">
                                <i class="fa fa-search"></i>
                                Search
                            </button>
                        </div>
                    </div>
                </div>
            </div>*@
            <div class="panel panel-default" id="grid-panel" style="margin-bottom:5px">
                <div class="panel-body">
                    @(Html.Kendo().Grid<IssueTracker.Model.ViewModel.IssueViewModel>()
                            .Name("grid")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.Id)
                                       .ClientTemplate("<a id='edit-#= Id #' class='btn btn-xs btn-default' onclick='edit(\"#= Id #\");'><i class='fa fa-pencil'></i>&nbsp;edit</a>")
                                       .Title("edit").Width(70).Filterable(false);
                                columns.Bound(p => p.Id)
                                       .ClientTemplate("<a id='delete-#= Id #' class='btn btn-xs btn-danger' onclick='destroyAccount(\"#= Id #\");'><i class='fa fa-trash-o'></i>&nbsp;delete</a>")
                                       .Title("delete").Width(80).Filterable(false);
                                columns.Bound(p => p.Id)
                                       .ClientTemplate("<a class='btn btn-xs btn-default' href='~/Issue/Detail/#=Id#'><i class='fa fa-eye'></i>&nbsp;view</a>")
                                       .Title("view").Width(70).Filterable(false);
                                columns.Bound(p => p.Name).Width(150);


                                columns.Bound(p => p.ProjectName).Width(180);
                                columns.Bound(p => p.AssignedToName).Width(180);
                                columns.Bound(p => p.Priority).Width(100)
                                .ClientTemplate(@"<span class='label 
                                                    # if(PriorityId == 1) {# label-default #} #
                                                    # if(PriorityId == 2) {# label-info #} #
                                                    # if(PriorityId == 3) {# label-warning #} #
                                                    # if(PriorityId == 4) {# label-danger #} #'>
                                                        #=Priority#</span>");
                                columns.Bound(p => p.IssueStatus).Width(120)
                                .ClientTemplate(@"<span class='label 
                                                    # if(IssueStatus == 'N') {# label-default #} #
                                                    # if(IssueStatus == 'A') {# label-info #} #
                                                    # if(IssueStatus == 'C') {# label-success #} #
                                                    # if(IssueStatus == 'S') {# label-danger #} #'>
                                                        #=StatusDescription#</span>");
                                columns.Bound(p => p.Description);

                            })
                            .Filterable(f => f.Enabled(true).Mode(GridFilterMode.Menu))
                            .Scrollable()
                            .Sortable()
                            .HtmlAttributes(new { style = "height: 100%" })
                            .Pageable(pageable => pageable
                                .PageSizes(true)
                                .ButtonCount(15)
                            )
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Read(read => read.Action("Issues_Read", "Issue"))
                            )
                            .Events(e =>
                            {
                                e.DataBound("onDataBound");
                            })
                    )
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var grid;
    $(document).ready(function () {
        grid = $("#grid").data("kendoGrid");
        setGridBlockSize();
        $("#main-nav #issues").addClass("active");

        $("#search-issues").on('click', function () {
            grid.dataSource.read();
            grid.refresh();
        });
        var role = $("#_role_").val();
        if (role === "C")
            grid.hideColumn(2);
    });
    function setGridBlockSize() {
        var h = ($(window).height() - $(".content-header").outerHeight() -
            $(".main-header").outerHeight() - $(".main-footer").outerHeight() - 40);
        $("#grid-panel").height(h);
        $("#grid").height(h - 25);
    }
    function onDataBound(e) {
        grid = grid || $("#grid").data("kendoGrid");
        var gridData = grid.dataSource.view();
        var loggedUser = $("#_usr_").val();

        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            var dItem = gridData[i];
            if (dItem.CreateBy !== loggedUser) {
                var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                var editButton = $(currenRow).find("#edit-" + dItem.Id);
                editButton.hide();
                var deleteButton = $(currenRow).find("#delete-" + dItem.Id);
                deleteButton.hide();
            }
        }
    }
    function destroyAccount(id) {
        var r = confirm("Sei sicuro di voler cancellare l'account?");
        if (r) {
            $.ajax({
                url: '@Url.Action("Issue_Destroy", "Issue")',
                data: { id: id },
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    alert(data)
                },
                complete: function () {
                    grid.dataSource.read();
                    grid.refresh();
                }
            });

        }
    }
    function edit(id) {
        document.location.href = '@Url.Action("IssueForm", "Issue")' + '?id=' + id;
    }

    // tooltip for issue description
    $("#grid").kendoTooltip({
        filter: "td:last-child()", //this filter selects the second column's cells
        position: "right",
        content: function (e) {
            var dataItem = $("#grid").data("kendoGrid").dataItem(e.target.closest("tr"));
            var content = dataItem.Description;
            return content;
        }
    }).data("kendoTooltip");
</script>